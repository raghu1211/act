name: Go CI

on:
  push:
    branches:
      - act_test
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        if: always()
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Dependencies
        run: |
          if [ -f package.json ]; then
            npm install
          fi

      - name: Run Linter
        run: |
          if [ -f package.json ]; then
            npm run lint
          else
            make lint
          fi

  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        if: always()
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Dependencies
        run: |
          if [ -f package.json ]; then
            npm install
          fi

      - name: Run Tests
        run: |
          if [ -f package.json ]; then
            npm test
          else
            make test
          fi

  build:
    name: Build Application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        if: always()
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Dependencies
        run: |
          if [ -f package.json ]; then
            npm install
          fi

      - name: Build Application
        run: |
          if [ -f package.json ]; then
            npm run build
          else
            make build
          fi

  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Run Security Scan with Trivy
        uses: aquasecurity/trivy-action@v1.0.10
        with:
          scan-type: 'fs'
          path: '.'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up Go
#         uses: actions/setup-go@v2
#         with:
#           go-version: '1.21'

#       - name: Install dependencies
#         run: go mod download

#       # - name: Run tests
#       #   run: make test

#       - name: Build the project
#         run: make install

#       - name: Upload build artifacts
#         uses: actions/upload-artifact@v2
#         with:
#           name: build-artifacts
#           path: |
#             bin/**
#             !**/node_modules/**

    # steps:
    #   - name: Checkout code
    #     uses: actions/checkout@v2

    #   - name: Set up Go
    #     uses: actions/setup-go@v2

    #   - name: Run tests
    #     run: go test ./...

    #   - name: Deploy to Staging
    #     if: ${{ github.ref == 'refs/heads/staging' }}
    #     run: ./deploy_staging.sh

      # - name: Deploy to Production
      #   if: github.ref == 'refs/heads/main' && startsWith(github.event.head_commit.message, 'release:')
      #   run: ./deploy_production.sh

